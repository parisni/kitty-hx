#!/usr/bin/env bash
set -eo pipefail

# Parse arguments
FILEPATH=""
QUERY=""

while [[ $# -gt 0 ]]; do
  case $1 in
    --filepath)
      FILEPATH="$2"
      shift 2
      ;;
    *)
      break
      ;;
  esac
done

# Check if there's a query file
if [[ -f /tmp/kittyx-live-grep-query ]]; then
  QUERY=$(cat /tmp/kittyx-live-grep-query | tr -d '\n')  # Just remove newlines
fi

# Build kittyx-live-grep command
LIVE_GREP_CMD="kittyx-live-grep --exit-on-execution --open-in-helix"

# Add query if provided
if [[ -n "$QUERY" ]]; then
  LIVE_GREP_CMD="$LIVE_GREP_CMD --query \"$QUERY\""
fi

# Add search path if filepath provided
if [[ -n "$FILEPATH" ]]; then
  if [[ -f "$FILEPATH" || -d "$FILEPATH" ]]; then
    # Works for both files and directories
    LIVE_GREP_CMD="$LIVE_GREP_CMD --search-path \"$FILEPATH\" --quit-yazi"
  else
    echo "Error: File path '$FILEPATH' does not exist."
    exit 1
  fi
fi

# Launch the tab and wait for it to exit
kitty @ launch \
  --type=tab \
  --title="live-grep" \
  --cwd=current \
  --wait-for-child-to-exit \
  -- bash -c "$LIVE_GREP_CMD"  >/dev/null 2>&1

# After the window is closed, output the result if it exists
if [[ -f /tmp/live-grep-result ]]; then
  cat /tmp/live-grep-result
fi

