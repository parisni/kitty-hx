#!/usr/bin/env bash

FILE="$1"

if [[ -z "$FILE" || ! -f "$FILE" ]]; then
  echo "Error: Must provide a valid file path."
  exit 1
fi

cd "$(dirname "$FILE")" || exit 1
FILENAME_ONLY="$(basename "$FILE")"

if ! git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
  echo "Not inside a Git repository."
  exit 1
fi

print_commit_preview() {
  local commit="$1"
  [[ -z "$commit" ]] && echo "No commit selected." && return
  git show --color=always "$commit" -- "$FILENAME_ONLY"
}

export -f print_commit_preview
export FILENAME_ONLY

git log --color=always --pretty=format:'%Cgreen%ad%Creset %Cblue%an%Creset %s %C(yellow)%h%Creset' \
  --date=format-local:'%Y-%m-%dT%H-%M' -- "$FILENAME_ONLY" |
fzf --ansi \
  --preview '
    bash -c '\''print_commit_preview "$(echo "$1" | awk "{print \$NF}")"'\'' _ {}
  ' \
  --preview-window=up:60% \
  --bind 'ctrl-o:execute-silent(
    bash -c '\''
      commit=$(echo "$1" | awk "{print \$NF}")
      [ -z "$commit" ] && exit 0

      msg=$(git show -s --format="%B" "$commit")
      pr=$(echo "$msg" | grep -oE "Merge pull request #[0-9]+|PR #[0-9]+|\\(#([0-9]+)\\)|Merged PR [0-9]+" | grep -oE "[0-9]+" | head -1)

      repo=$(git remote get-url origin)

      # Convert SSH to HTTPS or sanitize HTTPS
      if [[ "$repo" =~ ^git@([^:]+):(.+)\.git$ ]]; then
        host="${BASH_REMATCH[1]}"
        path="${BASH_REMATCH[2]}"
        repo="https://$host/$path"
      elif [[ "$repo" =~ ^https:// ]]; then
        repo="${repo%.git}"
      fi

      if [[ -n "$pr" ]]; then
        if [[ "$repo" == *"github.com"* || "$repo" == *"mpi-internal.com"* ]]; then
          url="$repo/pull/$pr"
        elif [[ "$repo" == *"azure.com"* ]]; then
          url="$repo/pullrequest/$pr"
        else
          url="$repo/pull/$pr"
        fi
      else
        url="$repo/commit/$commit"
      fi
      [[ -n "$url" ]] && xdg-open "$url"
    '\'' _ {}
  )'

